{"ast":null,"code":"var _jsxFileName = \"/home/jakub/code/java/BlogProject/simple-frontend/src/components/PostCreate.tsx\",\n  _s = $RefreshSig$();\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostCreate = _ref => {\n  _s();\n  let {\n    createPost\n  } = _ref;\n  const title = useRef(null);\n  const author = useRef(null);\n  const text = useRef(null);\n  const pin = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: title,\n      type: \"text\",\n      placeholder: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 59\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: author,\n      type: \"text\",\n      placeholder: \"Author\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 61\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: text,\n      type: \"text\",\n      placeholder: \"Text\",\n      size: 60\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 66\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: pin,\n      type: \"number\",\n      placeholder: \"PIN to edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 67\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (pin.current) {\n          createPost(pin.current.value || 0, pin.current.value || 0);\n        }\n      },\n      children: \"Create post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(PostCreate, \"hwlYw6NT+2V4TsL8MY1wTBqQW2s=\");\n_c = PostCreate;\nexport default PostCreate;\nvar _c;\n$RefreshReg$(_c, \"PostCreate\");","map":{"version":3,"names":["useRef","jsxDEV","_jsxDEV","PostCreate","_ref","_s","createPost","title","author","text","pin","className","children","ref","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","size","onClick","current","value","_c","$RefreshReg$"],"sources":["/home/jakub/code/java/BlogProject/simple-frontend/src/components/PostCreate.tsx"],"sourcesContent":["import { useRef } from \"react\";\n\nexport type PostData = {\n  id: number;\n  title: string;\n  author: string;\n  text: string;\n  pin: number;\n};\n\nconst PostCreate = ({ \n  createPost\n}: {  \n  createPost: (pin: number, title:string, author:string, text:string) => void;\n}): JSX.Element => {\n  const title = useRef<HTMLInputElement>(null);\n  const author = useRef<HTMLInputElement>(null);\n  const text = useRef<HTMLInputElement>(null);\n  const pin = useRef<HTMLInputElement>(null);\n  return (\n    <div className=\"post\">\n     <input ref={title} type=\"text\" placeholder=\"Title\" /><br />\n     <input ref={author} type=\"text\" placeholder=\"Author\" /><br />\n     <input ref={text} type=\"text\" placeholder=\"Text\" size={60}/><br />\n\n      <input ref={pin} type=\"number\" placeholder=\"PIN to edit\"  /><br />\n\n      <button\n        onClick={() => {\n            if(pin.current){\n                createPost(pin.current.value ||0,pin.current.value ||0 )\n            }\n        }}\n      >\n        Create post\n      </button>\n    </div>\n  );\n};\n\nexport default PostCreate;\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU/B,MAAMC,UAAU,GAAGC,IAAA,IAIA;EAAAC,EAAA;EAAA,IAJC;IAClBC;EAGF,CAAC,GAAAF,IAAA;EACC,MAAMG,KAAK,GAAGP,MAAM,CAAmB,IAAI,CAAC;EAC5C,MAAMQ,MAAM,GAAGR,MAAM,CAAmB,IAAI,CAAC;EAC7C,MAAMS,IAAI,GAAGT,MAAM,CAAmB,IAAI,CAAC;EAC3C,MAAMU,GAAG,GAAGV,MAAM,CAAmB,IAAI,CAAC;EAC1C,oBACEE,OAAA;IAAKS,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACpBV,OAAA;MAAOW,GAAG,EAAEN,KAAM;MAACO,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAAAjB,OAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC3DjB,OAAA;MAAOW,GAAG,EAAEL,MAAO;MAACM,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAAAjB,OAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC7DjB,OAAA;MAAOW,GAAG,EAAEJ,IAAK;MAACK,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,MAAM;MAACK,IAAI,EAAE;IAAG;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAAAjB,OAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEjEjB,OAAA;MAAOW,GAAG,EAAEH,GAAI;MAACI,IAAI,EAAC,QAAQ;MAACC,WAAW,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAAAjB,OAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAElEjB,OAAA;MACEmB,OAAO,EAAEA,CAAA,KAAM;QACX,IAAGX,GAAG,CAACY,OAAO,EAAC;UACXhB,UAAU,CAACI,GAAG,CAACY,OAAO,CAACC,KAAK,IAAG,CAAC,EAACb,GAAG,CAACY,OAAO,CAACC,KAAK,IAAG,CAAE,CAAC;QAC5D;MACJ,CAAE;MAAAX,QAAA,EACH;IAED;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACd,EAAA,CA5BIF,UAAU;AAAAqB,EAAA,GAAVrB,UAAU;AA8BhB,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}